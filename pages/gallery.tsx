import { Footer, Navigation } from '@/components';
import { galleryVariant } from '@/variants';
import { motion } from 'framer-motion';
import Head from 'next/head';
import { useEffect, useState } from 'react';

interface ImageProps {
  filename: string;
}

interface ImageListItemProps {
  image: any;
  setSelected: any;
  setHide: any;
}
interface ModalProps {
  selected: any;
  setSelected: any;
  setHide: any;
}

const transition = { duration: 0.6, ease: [0.43, 0.13, 0.23, 0.96] };

const ImageListItem = ({ image, setSelected, setHide }: ImageListItemProps) => {
  return (
    <motion.div variants={galleryVariant} className="aspect-square">
      <motion.img
        layoutId={`image-${image.filename}`}
        whileTap={{
          scale: 0.95,
        }}
        onClick={() => {
          setSelected(image);
          setHide(true);
        }}
        transition={transition}
        src={`img/${image.filename}`}
        alt={`${image.filename}`}
        className="w-full h-full object-cover object-center cursor-auto"
      />
    </motion.div>
  );
};

const Modal = ({ selected, setSelected, setHide }: ModalProps) => {
  if (!selected) {
    <></>;
  }
  console.log(selected);

  return (
    <div
      onClick={() => {
        setSelected(null);
        setHide(false);
      }}
      className="fixed inset-0 bg-white/50 z-50 cursor-pointer overflow-y-scroll"
    >
      <div onClick={e => e.stopPropagation()} className="w-full max-w-[700px] mx-auto my-8 px-8 cursor-default">
        <div className="bg-project-white min-h-screen flex items-center justify-center py-10 px-4">
          <div className="mx-auto max-w-screen-5xl flex items-center justify-center">
            <div className="max-w-[1000px]">
              <motion.div
                layoutId={`image-${selected.filename}`}
                initial={{ y: 100, opacity: 0 }}
                animate={{ y: 0, opacity: 1 }}
                transition={{ duration: 0.5, delay: 0.3 }}
                className="aspect-auto"
              >
                <img src={`img/${selected.filename}`} alt={``} className="w-full h-full object-cover object-center" />
              </motion.div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default function Gallery() {
  const [images, setImages] = useState<ImageProps[]>([]);
  const [selected, setSelected] = useState(null);
  const [hide, setHide] = useState(false);

  useEffect(() => {
    async function fetchImages() {
      const res = await fetch('/api/images');
      const filenames = await res.json();
      //@ts-ignore
      const images = filenames.map((filename: any) => ({ filename }));
      setImages(images);
    }
    fetchImages();
  }, []);

  return (
    <>
      <Head>
        <title>Brittani & Klaven</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header>
        <Navigation page="gallery" />
      </header>
      <motion.main
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ duration: 0.5 }}
        className="bg-project-white min-h-screen py-10 sm:py-20 px-10"
      >
        <div className="mx-auto max-w-screen-2xl">
          <motion.div
            initial={false}
            animate={hide ? 'hidden' : 'shown'}
            variants={galleryVariant}
            className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8"
          >
            {images.map(image => (
              <ImageListItem key={image.filename} image={image} setSelected={setSelected} setHide={setHide} />
            ))}
          </motion.div>
          {selected && <Modal setSelected={setSelected} selected={selected} setHide={setHide} />}
        </div>
      </motion.main>
      <Footer />
    </>
  );
}
